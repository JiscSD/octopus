"use strict";function _slicedToArray(r,e){return _arrayWithHoles(r)||_iterableToArrayLimit(r,e)||_unsupportedIterableToArray(r,e)||_nonIterableRest()}function _nonIterableRest(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}function _unsupportedIterableToArray(r,e){if(r){if("string"==typeof r)return _arrayLikeToArray(r,e);var t={}.toString.call(r).slice(8,-1);return"Object"===t&&r.constructor&&(t=r.constructor.name),"Map"===t||"Set"===t?Array.from(r):"Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t)?_arrayLikeToArray(r,e):void 0}}function _arrayLikeToArray(r,e){(null==e||e>r.length)&&(e=r.length);for(var t=0,o=Array(e);t<e;t++)o[t]=r[t];return o}function _iterableToArrayLimit(r,e){var t=null==r?null:"undefined"!=typeof Symbol&&r[Symbol.iterator]||r["@@iterator"];if(null!=t){var o,n,a,i,l=[],u=!0,y=!1;try{if(a=(t=t.call(r)).next,0===e){if(Object(t)!==t)return;u=!1}else for(;!(u=(o=a.call(t)).done)&&(l.push(o.value),l.length!==e);u=!0);}catch(r){y=!0,n=r}finally{try{if(!u&&null!=t.return&&(i=t.return(),Object(i)!==i))return}finally{if(y)throw n}}return l}}function _arrayWithHoles(r){if(Array.isArray(r))return r}const framework="path-to-regexp";module.exports.packageNames=["find-my-way"],module.exports.hook="route",module.exports.load=({onBeforeRequire:r,require:e,report:t,proxyMethod:o})=>{r("find-my-way",(()=>{const r=e("find-my-way"),n=e("http");o(r.prototype,"on",(({args:r,stack:e})=>{const o=_slicedToArray(r,2),a=o[0],i=o[1];let l=null;if("string"==typeof a?l=a.toUpperCase():a instanceof Array&&a===n.METHODS&&(l="*"),null===l)return;if("function"!=typeof(r[3]||r[2]))return!1;t({route:i,framework:framework,method:l},e)}))}))};