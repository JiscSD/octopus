"use strict";module.exports.hook="httprequest",module.exports.load=({proxyMethod:t,report:e,reportInternal:o,onEventEmitted:r})=>{const s=require("http"),d=require("https");r("request",(t=>{const e=t.data,r=e.context,u=e.args;if(![s.Server,d.Server].includes(r.constructor))return!1;const a=u[1];if(!a)return!1;o({request:{url:a.url,method:a.method,headers:a.headers},direction:"incoming"},t.stack)}));[{parentModule:s,method:"get",defaultProtocol:"http:"},{parentModule:s,method:"request",defaultProtocol:"http:"},{parentModule:d,method:"get",defaultProtocol:"https:"},{parentModule:d,method:"request",defaultProtocol:"https:"}].forEach((({parentModule:o,method:r,defaultProtocol:s})=>{t(o,r,(({args:t,stack:o})=>{let r=null;switch(typeof t[0]){case"string":r=t[0];break;case"object":{const e=t[0].protocol||s,o=t[0].path||"/",d=t[0].hostname||t[0].host;if(!d)break;r=`${e}//${d}`,t[0].port&&(r+=`:${t[0].port}`),r+=o}}r&&e({request:{url:r,method:"GET",headers:{}},direction:"outgoing"},o)}))}))};