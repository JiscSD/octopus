openapi: 3.0.0
info:
  version: '1'
  title: Octopus
  description: Open research publishing platform
servers:
  # Added by API Auto Mocking Plugin
  - description: SwaggerHub API Auto Mocking
    url: https://virtserver.swaggerhub.com/FINLAYBIRNIE/Octopus/1
  - url: https://prod.api.octopus.ac/v1
    description: Octopus live environment
tags:
- name: Bookmarks
  description: Mark a publication or topic of particular interest
security:
  - ApiKeyAuth: []
paths:
  /bookmarks:
    get:
      summary: Get all my bookmarks
      description: A user can have many bookmarks on publications or topics.
      tags:
        - Bookmarks
      parameters:
        - in: query
          name: type
          schema:
            type: string
            enum: [PUBLICATION, TOPIC]
          required: true
          description: Type of bookmark to return
        - in: query
          name: entityId
          schema:
            type: string
          required: false
          description: Filter to a particular entity, to check if it is bookmarked
      responses:
        '200':
          description: User's bookmarks
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Bookmark"
        '400':
          $ref: "#/components/responses/BadRequest"
        '401':
          $ref: "#/components/responses/Unauthorized"
    post:
      summary: Create a bookmark
      tags:
        - Bookmarks
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                type:
                  type: string
                  enum: [PUBLICATION, TOPIC]
                entityId:
                  type: string
      responses:
        '201':
          description: Bookmark created successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Bookmark"
        '400':
          $ref: "#/components/responses/BadRequest"
        '401':
          $ref: "#/components/responses/Unauthorized"
        '403':
          $ref: "#/components/responses/Forbidden"
        '404':
          $ref: "#/components/responses/NotFound"
  /bookmarks/{id}:
    delete:
      summary: Delete a bookmark
      tags:
        - Bookmarks
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: Bookmark ID
      responses:
        '200':
          description: Bookmark deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                example:
                  message: Bookmark deleted successfully.
        '400':
          $ref: "#/components/responses/BadRequest"
        '401':
          $ref: "#/components/responses/Unauthorized"
        '403':
          $ref: "#/components/responses/Forbidden"
        '404':
          $ref: "#/components/responses/NotFound"
components:
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: query
      name: api_key
  schemas:
    Bookmark:
      type: object
      properties:
        id:
          type: string
        type: 
          type: string
          enum: [PUBLICATION, TOPIC]
        entityId:
          type: string
        userId:
          type: string
  responses:
    BadRequest:
      description: Bad request
    Unauthorized:
      description: Unauthorized. Missing bearer token or API key
    Forbidden:
      description: Forbidden
    NotFound:
      description: Resource not found